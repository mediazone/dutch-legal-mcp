name: üîñ Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - prerelease
      custom_notes:
        description: 'Custom release notes (optional)'
        required: false
        type: string

jobs:
  create-release:
    name: üîñ Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üè∑Ô∏è Get version info
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Extract version from tag
            VERSION=${GITHUB_REF#refs/tags/v}
            TAG=${GITHUB_REF#refs/tags/}
          else
            # Manual trigger - use package.json version
            VERSION=$(node -p "require('./package.json').version")
            TAG="v$VERSION"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: üìù Generate release notes
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          CUSTOM_NOTES="${{ github.event.inputs.custom_notes }}"
          
          cat > release_notes.md << 'EOL'
          ## üá≥üá±‚öñÔ∏è Dutch Legal MCP v$VERSION

          ### ‚ú® What's New
          - 103/103 comprehensive tests passing
          - Full TypeScript support with strict mode
          - Complete GDPR compliance validation
          - EU AI Act classification system
          - Meta-compliance demonstrations

          ### üì¶ Installation
          ```bash
          npm install -g @mediazone/dutch-legal-mcp
          claude mcp add dutch-legal npx -- -y @mediazone/dutch-legal-mcp
          ```

          ### üîó Links
          - üåç [Project Website](https://mediazone.github.io/dutch-legal-mcp)
          - üì¶ [NPM Package](https://www.npmjs.com/package/@mediazone/dutch-legal-mcp)

          EOL

          if [ ! -z "$CUSTOM_NOTES" ]; then
            echo "" >> release_notes.md
            echo "### üìù Additional Notes" >> release_notes.md
            echo "$CUSTOM_NOTES" >> release_notes.md
          fi

          sed -i "s/\$VERSION/$VERSION/g" release_notes.md

      - name: üîñ Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_TYPE="${{ github.event.inputs.release_type || 'release' }}"
          VERSION="${{ steps.version.outputs.version }}"
          TAG="${{ steps.version.outputs.tag }}"
          
          PRERELEASE_FLAG=""
          if [ "$RELEASE_TYPE" = "prerelease" ]; then
            PRERELEASE_FLAG="--prerelease"
          fi
          
          gh release create "$TAG" \
            --title "üá≥üá±‚öñÔ∏è Dutch Legal MCP v$VERSION" \
            --notes-file release_notes.md \
            $PRERELEASE_FLAG \
            --generate-notes